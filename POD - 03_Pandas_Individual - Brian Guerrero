{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1HhRjWmr-uPdOWtDdvhGitVYNEzwrmtYh","timestamp":1729879313332}],"collapsed_sections":["8ec8DQdbWQfC"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["*   **Año:** [INSERTAR AÑO]\n","*   **Alumno/a:** [INSERTAR NOMBRE]\n","*   **Legajo:** [LEGAJO]"],"metadata":{"id":"UwxQU5JCF33j"}},{"cell_type":"markdown","source":["# Pandas\n","A continuación, cada celda va a pedir algo distinto. Por favor, realizarlo con la menor cantidad de lineas posibles y con NumPy.\n"],"metadata":{"id":"8ec8DQdbWQfC"}},{"cell_type":"markdown","source":["**Importar** `pandas` con el alias `pd` e imprimir la versión instalada."],"metadata":{"id":"uF01w4AQcrtV"}},{"cell_type":"code","source":["import pandas as pd\n","pd.__version__"],"metadata":{"id":"4WPUcwU_c5n2","colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"status":"ok","timestamp":1732314543470,"user_tz":180,"elapsed":967,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"81905653-94f0-4266-c542-eeae9c8bf45d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2.2.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["Crear la siguiente tabla como un dataframe de Pandas donde cada linea represente un diccionario.\n","\n","| _Index_ | **nombre**       | **edad** | **dni**  |\n","|---------|------------------|----------|----------|\n","| 9       | Brown, James     | 43       | 30123444 |\n","| 3       | Hamkel, Louis V. | 29       | 44555666 |\n","| 7       | Baptista, Carlos | 28       | 43120111 |"],"metadata":{"id":"eC8fpbQ04GzX"}},{"cell_type":"code","source":["diccionario =[\n","    {'Index': 9, 'nombre': 'Brown, James','edad': 43, 'dni': 30123444},\n","    {'Index': 3,'nombre': 'Hamkel, Louis V.','edad': 29, 'dni': 44555666},\n","    {'Index': 7,'nombre': 'Baptista, Carlos','edad': 28, 'dni': 43120111}\n","]\n","df = pd.DataFrame(diccionario)\n","df"],"metadata":{"id":"I4zJ7s_k4GkI","executionInfo":{"status":"ok","timestamp":1732314550407,"user_tz":180,"elapsed":297,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"c2ceecb6-85f8-4473-c380-0e4d9782ce0d","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Index            nombre  edad       dni\n","0      9      Brown, James    43  30123444\n","1      3  Hamkel, Louis V.    29  44555666\n","2      7  Baptista, Carlos    28  43120111"],"text/html":["\n","  <div id=\"df-112eb520-2b7a-497f-9787-fcb84174809c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Index</th>\n","      <th>nombre</th>\n","      <th>edad</th>\n","      <th>dni</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>Brown, James</td>\n","      <td>43</td>\n","      <td>30123444</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Hamkel, Louis V.</td>\n","      <td>29</td>\n","      <td>44555666</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>Baptista, Carlos</td>\n","      <td>28</td>\n","      <td>43120111</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-112eb520-2b7a-497f-9787-fcb84174809c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-112eb520-2b7a-497f-9787-fcb84174809c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-112eb520-2b7a-497f-9787-fcb84174809c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1311c15f-792f-4fbb-8d3c-55b424505702\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1311c15f-792f-4fbb-8d3c-55b424505702')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1311c15f-792f-4fbb-8d3c-55b424505702 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3afea629-ac57-4680-ba27-70d3eea80e4f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3afea629-ac57-4680-ba27-70d3eea80e4f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 3,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Brown, James\",\n          \"Hamkel, Louis V.\",\n          \"Baptista, Carlos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 28,\n        \"max\": 43,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          43,\n          29,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dni\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7950505,\n        \"min\": 30123444,\n        \"max\": 44555666,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          30123444,\n          44555666,\n          43120111\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["Crear la siguiente tabla como un dataframe de Pandas donde todas las lineas esten dentro de un solo diccionario.\n","\n","| _Index_ | **nombre**       | **edad** | **dni**  |\n","|---------|------------------|----------|----------|\n","| 9       | Brown, James     | 43       | 30123444 |\n","| 3       | Hamkel, Louis V. | 29       | 44555666 |\n","| 7       | Baptista, Carlos | 28       | 43120111 |"],"metadata":{"id":"zas-XX4r4SeP"}},{"cell_type":"code","source":["diccionario={\n","    'Index': [9,3,7],\n","    'nombre': ['Brown, James','Hamkel, Louis V.','Baptista, Carlos'],\n","    'edad': [43,29,28],\n","    'dni': [30123444,44555666,43120111]\n","}\n","df = pd.DataFrame(diccionario)\n","df\n"],"metadata":{"id":"_DhtCWhr4ST9","executionInfo":{"status":"ok","timestamp":1732314554146,"user_tz":180,"elapsed":301,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"134861bb-c047-43ef-dbae-7e9130382a33","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Index            nombre  edad       dni\n","0      9      Brown, James    43  30123444\n","1      3  Hamkel, Louis V.    29  44555666\n","2      7  Baptista, Carlos    28  43120111"],"text/html":["\n","  <div id=\"df-f13c8f3a-49af-4c55-8627-a1c9bfb607f4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Index</th>\n","      <th>nombre</th>\n","      <th>edad</th>\n","      <th>dni</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>Brown, James</td>\n","      <td>43</td>\n","      <td>30123444</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Hamkel, Louis V.</td>\n","      <td>29</td>\n","      <td>44555666</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>Baptista, Carlos</td>\n","      <td>28</td>\n","      <td>43120111</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f13c8f3a-49af-4c55-8627-a1c9bfb607f4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f13c8f3a-49af-4c55-8627-a1c9bfb607f4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f13c8f3a-49af-4c55-8627-a1c9bfb607f4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-28477071-6298-4165-a061-fb97835c4c23\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28477071-6298-4165-a061-fb97835c4c23')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-28477071-6298-4165-a061-fb97835c4c23 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ba236f41-6f2a-4f75-aecb-8eef008c3dad\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ba236f41-6f2a-4f75-aecb-8eef008c3dad button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 3,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Brown, James\",\n          \"Hamkel, Louis V.\",\n          \"Baptista, Carlos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 28,\n        \"max\": 43,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          43,\n          29,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dni\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7950505,\n        \"min\": 30123444,\n        \"max\": 44555666,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          30123444,\n          44555666,\n          43120111\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Crear la siguiente tabla como un dataframe de Pandas donde se usen unicamente listas.\n","\n","| _Index_ | **nombre**       | **edad** | **dni**  |\n","|---------|------------------|----------|----------|\n","| 9       | Brown, James     | 43       | 30123444 |\n","| 3       | Hamkel, Louis V. | 29       | 44555666 |\n","| 7       | Baptista, Carlos | 28       | 43120111 |"],"metadata":{"id":"ejbn5RSH4S_W"}},{"cell_type":"code","source":["Index=[9,3,7]\n","nombre=['Brown, James','Hamkel, Louis V.','Baptista, Carlos']\n","edad=[43,29,28]\n","dni=[30123444,44555666,43120111]\n","df=pd.DataFrame({\n","    'Index':Index,\n","    'nombre':nombre,\n","    'edad':edad,\n","    'dni:':dni\n","})\n","df"],"metadata":{"id":"OMPq8C1C4Su3","executionInfo":{"status":"ok","timestamp":1732314557883,"user_tz":180,"elapsed":295,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"5e3906cd-3598-4e64-82a8-7fb9547ab836","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Index            nombre  edad      dni:\n","0      9      Brown, James    43  30123444\n","1      3  Hamkel, Louis V.    29  44555666\n","2      7  Baptista, Carlos    28  43120111"],"text/html":["\n","  <div id=\"df-7718f853-fce6-4749-8d5e-4b3ebb0dc188\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Index</th>\n","      <th>nombre</th>\n","      <th>edad</th>\n","      <th>dni:</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>Brown, James</td>\n","      <td>43</td>\n","      <td>30123444</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Hamkel, Louis V.</td>\n","      <td>29</td>\n","      <td>44555666</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>Baptista, Carlos</td>\n","      <td>28</td>\n","      <td>43120111</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7718f853-fce6-4749-8d5e-4b3ebb0dc188')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7718f853-fce6-4749-8d5e-4b3ebb0dc188 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7718f853-fce6-4749-8d5e-4b3ebb0dc188');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-716611a7-c3f5-441b-96b6-7c79256380df\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-716611a7-c3f5-441b-96b6-7c79256380df')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-716611a7-c3f5-441b-96b6-7c79256380df button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6a704857-9cc8-4485-b1fd-aca6cab8832b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6a704857-9cc8-4485-b1fd-aca6cab8832b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 3,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Brown, James\",\n          \"Hamkel, Louis V.\",\n          \"Baptista, Carlos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 28,\n        \"max\": 43,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          43,\n          29,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dni:\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7950505,\n        \"min\": 30123444,\n        \"max\": 44555666,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          30123444,\n          44555666,\n          43120111\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["Crear la siguiente tabla como un dataframe de Pandas donde se usen unicamente `Series`.\n","\n","| _Index_ | **nombre**       | **edad** | **dni**  |\n","|---------|------------------|----------|----------|\n","| 9       | Brown, James     | 43       | 30123444 |\n","| 3       | Hamkel, Louis V. | 29       | 44555666 |\n","| 7       | Baptista, Carlos | 28       | 43120111 |"],"metadata":{"id":"dVCeyowLEnJ1"}},{"cell_type":"code","source":["Index=pd.Series([9,3,7])\n","nombre=pd.Series(['Brown, James','Hamkel, Louis V,','Baptista, Carlos'])\n","edad=pd.Series([43,29,28])\n","dni=pd.Series([30123444,44555666,43120111])\n","df=pd.DataFrame({\n","    'Index':Index,\n","    'nombre':nombre,\n","    'edad':edad,\n","    'dni':dni\n","})\n","df"],"metadata":{"id":"lj0zQr7qEmzj","executionInfo":{"status":"ok","timestamp":1732314561456,"user_tz":180,"elapsed":467,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"e36d6c17-2e41-4a78-ef48-8a07fb4c4ffc","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Index            nombre  edad       dni\n","0      9      Brown, James    43  30123444\n","1      3  Hamkel, Louis V,    29  44555666\n","2      7  Baptista, Carlos    28  43120111"],"text/html":["\n","  <div id=\"df-cbb2a434-9c82-4053-aeb0-71230b570a63\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Index</th>\n","      <th>nombre</th>\n","      <th>edad</th>\n","      <th>dni</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>Brown, James</td>\n","      <td>43</td>\n","      <td>30123444</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Hamkel, Louis V,</td>\n","      <td>29</td>\n","      <td>44555666</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>Baptista, Carlos</td>\n","      <td>28</td>\n","      <td>43120111</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbb2a434-9c82-4053-aeb0-71230b570a63')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cbb2a434-9c82-4053-aeb0-71230b570a63 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cbb2a434-9c82-4053-aeb0-71230b570a63');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c93bcb73-4e91-449c-aacb-2926e36ee6d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c93bcb73-4e91-449c-aacb-2926e36ee6d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c93bcb73-4e91-449c-aacb-2926e36ee6d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6dde8a2b-c101-4b3f-bb3e-e055af37d536\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6dde8a2b-c101-4b3f-bb3e-e055af37d536 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 3,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Brown, James\",\n          \"Hamkel, Louis V,\",\n          \"Baptista, Carlos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 28,\n        \"max\": 43,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          43,\n          29,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dni\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7950505,\n        \"min\": 30123444,\n        \"max\": 44555666,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          30123444,\n          44555666,\n          43120111\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["Reutilice cualquiera de los dataframe hechos anteriormente pero agregue la columna `fecha` con el tipo de dato relacionado a fechas.\n","\n","| _Index_ | **nombre**       | **edad** | **dni**  | **fecha**  |\n","|---------|------------------|----------|----------|------------|\n","| 9       | Brown, James     | 43       | 30123444 | 12/08/1981 |\n","| 3       | Hamkel, Louis V. | 29       | 44555666 | 10/04/1995 |\n","| 7       | Baptista, Carlos | 28       | 43120111 | 28/05/1996 |"],"metadata":{"id":"oP9dwhSLEnix"}},{"cell_type":"code","source":["Index=pd.Series([9,3,7])\n","nombre=pd.Series(['Brown, James','Hamkel, Louis V,','Baptista, Carlos'])\n","edad=pd.Series([43,29,28])\n","dni=pd.Series([30123444,44555666,43120111])\n","fecha=pd.Series(['12/08/1981','10/04/1995','28/05/1996'])\n","df=pd.DataFrame({\n","    'Index':Index,\n","    'nombre':nombre,\n","    'edad':edad,\n","    'dni':dni,\n","    'fecha':fecha\n","})\n","df"],"metadata":{"id":"lt6ZjIgAFEpT","executionInfo":{"status":"ok","timestamp":1732314566256,"user_tz":180,"elapsed":439,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"e1cb5f29-85fc-4a19-8b99-719338e9ddc4","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Index            nombre  edad       dni       fecha\n","0      9      Brown, James    43  30123444  12/08/1981\n","1      3  Hamkel, Louis V,    29  44555666  10/04/1995\n","2      7  Baptista, Carlos    28  43120111  28/05/1996"],"text/html":["\n","  <div id=\"df-f743cf56-34a5-4d37-88b6-89616aaa74d6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Index</th>\n","      <th>nombre</th>\n","      <th>edad</th>\n","      <th>dni</th>\n","      <th>fecha</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>Brown, James</td>\n","      <td>43</td>\n","      <td>30123444</td>\n","      <td>12/08/1981</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Hamkel, Louis V,</td>\n","      <td>29</td>\n","      <td>44555666</td>\n","      <td>10/04/1995</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>Baptista, Carlos</td>\n","      <td>28</td>\n","      <td>43120111</td>\n","      <td>28/05/1996</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f743cf56-34a5-4d37-88b6-89616aaa74d6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f743cf56-34a5-4d37-88b6-89616aaa74d6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f743cf56-34a5-4d37-88b6-89616aaa74d6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7a20456e-a2a3-4503-a648-3afe30444d1f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7a20456e-a2a3-4503-a648-3afe30444d1f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7a20456e-a2a3-4503-a648-3afe30444d1f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_135a6a1e-b381-4535-b81f-5c479b2d9f6c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_135a6a1e-b381-4535-b81f-5c479b2d9f6c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 3,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Brown, James\",\n          \"Hamkel, Louis V,\",\n          \"Baptista, Carlos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 28,\n        \"max\": 43,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          43,\n          29,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dni\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7950505,\n        \"min\": 30123444,\n        \"max\": 44555666,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          30123444,\n          44555666,\n          43120111\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fecha\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"12/08/1981\",\n          \"10/04/1995\",\n          \"28/05/1996\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Ejecute la siguiente celda. Se va a descargar un archivo llamado `u.user`."],"metadata":{"id":"X6Y5smKMEn6w"}},{"cell_type":"code","source":["!wget https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user"],"metadata":{"id":"3v7G1jWs7rDg","executionInfo":{"status":"ok","timestamp":1732314568702,"user_tz":180,"elapsed":313,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"fa50c724-9ff8-4509-cd6f-6cacf530c32d","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2024-11-22 22:29:28--  https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 22667 (22K) [text/plain]\n","Saving to: ‘u.user’\n","\n","\ru.user                0%[                    ]       0  --.-KB/s               \ru.user              100%[===================>]  22.14K  --.-KB/s    in 0.001s  \n","\n","2024-11-22 22:29:28 (14.5 MB/s) - ‘u.user’ saved [22667/22667]\n","\n"]}]},{"cell_type":"markdown","source":["Lea el archivo con pandas y muestre las primeras 5 filas."],"metadata":{"id":"-qRRF8T_72wD"}},{"cell_type":"code","source":["df=pd.read_csv('u.user',sep='|')\n","df.head()"],"metadata":{"id":"HlPu1a1sEohQ","executionInfo":{"status":"ok","timestamp":1732314574422,"user_tz":180,"elapsed":294,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"29bf8b5f-c706-431b-9ff2-620d13a5975f","colab":{"base_uri":"https://localhost:8080/","height":206}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id  age gender  occupation zip_code\n","0        1   24      M  technician    85711\n","1        2   53      F       other    94043\n","2        3   23      M      writer    32067\n","3        4   24      M  technician    43537\n","4        5   33      F       other    15213"],"text/html":["\n","  <div id=\"df-3e1cb30e-0e80-455d-b97a-d2ddc9357063\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>occupation</th>\n","      <th>zip_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>85711</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>53</td>\n","      <td>F</td>\n","      <td>other</td>\n","      <td>94043</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>writer</td>\n","      <td>32067</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>43537</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>33</td>\n","      <td>F</td>\n","      <td>other</td>\n","      <td>15213</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e1cb30e-0e80-455d-b97a-d2ddc9357063')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e1cb30e-0e80-455d-b97a-d2ddc9357063 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e1cb30e-0e80-455d-b97a-d2ddc9357063');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5cb9d738-8cf3-4e16-872b-cb4fa0af4e54\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5cb9d738-8cf3-4e16-872b-cb4fa0af4e54')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5cb9d738-8cf3-4e16-872b-cb4fa0af4e54 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 943,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 272,\n        \"min\": 1,\n        \"max\": 943,\n        \"num_unique_values\": 943,\n        \"samples\": [\n          97,\n          266,\n          811\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 7,\n        \"max\": 73,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          24,\n          57,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"technician\",\n          \"healthcare\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zip_code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 795,\n        \"samples\": [\n          \"90016\",\n          \"15232\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["Utilice la columna `user_id` como indice y saque dicha columna del dataframe\n","\n"],"metadata":{"id":"LsqtwfYc8P6L"}},{"cell_type":"code","source":["df.set_index('user_id', inplace=True)\n","df.head()"],"metadata":{"id":"yQs0BtSF8PzU","executionInfo":{"status":"ok","timestamp":1732314580241,"user_tz":180,"elapsed":287,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"52b3b3eb-35ad-4e80-c513-43326052d2ad","colab":{"base_uri":"https://localhost:8080/","height":238}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         age gender  occupation zip_code\n","user_id                                 \n","1         24      M  technician    85711\n","2         53      F       other    94043\n","3         23      M      writer    32067\n","4         24      M  technician    43537\n","5         33      F       other    15213"],"text/html":["\n","  <div id=\"df-14497e70-e0ec-4809-9d5e-7eab940c21d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>occupation</th>\n","      <th>zip_code</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>85711</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>53</td>\n","      <td>F</td>\n","      <td>other</td>\n","      <td>94043</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>writer</td>\n","      <td>32067</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>technician</td>\n","      <td>43537</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","      <td>F</td>\n","      <td>other</td>\n","      <td>15213</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14497e70-e0ec-4809-9d5e-7eab940c21d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-14497e70-e0ec-4809-9d5e-7eab940c21d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-14497e70-e0ec-4809-9d5e-7eab940c21d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7a3b7c67-6a0c-4dfc-82f1-a350d901ebb8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7a3b7c67-6a0c-4dfc-82f1-a350d901ebb8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7a3b7c67-6a0c-4dfc-82f1-a350d901ebb8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 943,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 272,\n        \"min\": 1,\n        \"max\": 943,\n        \"num_unique_values\": 943,\n        \"samples\": [\n          97,\n          266,\n          811\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 7,\n        \"max\": 73,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          24,\n          57,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"technician\",\n          \"healthcare\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zip_code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 795,\n        \"samples\": [\n          \"90016\",\n          \"15232\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["¿Cuantas categorias de trabajos hay?"],"metadata":{"id":"_5Cld-VT8PsG"}},{"cell_type":"code","source":["categoria=df['occupation'].nunique()\n","categoria\n"],"metadata":{"id":"TVeQ-jgZ8PlX","executionInfo":{"status":"ok","timestamp":1732314586190,"user_tz":180,"elapsed":294,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"7575c7b6-7d49-4083-e3fb-2ab46888548e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":[" Reporte el porcentaje de personas que tiene cada ocupación."],"metadata":{"id":"suETYqm28Pba"}},{"cell_type":"code","source":["porcentaje=df['occupation'].value_counts(normalize=True)*100\n","porcentaje"],"metadata":{"id":"mJFiaURH8PS4","executionInfo":{"status":"ok","timestamp":1732314593211,"user_tz":180,"elapsed":3,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"aaff1fc7-7b74-461f-85b8-731e06198661","colab":{"base_uri":"https://localhost:8080/","height":774}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["occupation\n","student          20.784730\n","other            11.134677\n","educator         10.074231\n","administrator     8.377519\n","engineer          7.104984\n","programmer        6.998940\n","librarian         5.408271\n","writer            4.772004\n","executive         3.393425\n","scientist         3.287381\n","artist            2.969247\n","technician        2.863203\n","marketing         2.757158\n","entertainment     1.908802\n","healthcare        1.696713\n","retired           1.484624\n","lawyer            1.272534\n","salesman          1.272534\n","none              0.954401\n","homemaker         0.742312\n","doctor            0.742312\n","Name: proportion, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>proportion</th>\n","    </tr>\n","    <tr>\n","      <th>occupation</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student</th>\n","      <td>20.784730</td>\n","    </tr>\n","    <tr>\n","      <th>other</th>\n","      <td>11.134677</td>\n","    </tr>\n","    <tr>\n","      <th>educator</th>\n","      <td>10.074231</td>\n","    </tr>\n","    <tr>\n","      <th>administrator</th>\n","      <td>8.377519</td>\n","    </tr>\n","    <tr>\n","      <th>engineer</th>\n","      <td>7.104984</td>\n","    </tr>\n","    <tr>\n","      <th>programmer</th>\n","      <td>6.998940</td>\n","    </tr>\n","    <tr>\n","      <th>librarian</th>\n","      <td>5.408271</td>\n","    </tr>\n","    <tr>\n","      <th>writer</th>\n","      <td>4.772004</td>\n","    </tr>\n","    <tr>\n","      <th>executive</th>\n","      <td>3.393425</td>\n","    </tr>\n","    <tr>\n","      <th>scientist</th>\n","      <td>3.287381</td>\n","    </tr>\n","    <tr>\n","      <th>artist</th>\n","      <td>2.969247</td>\n","    </tr>\n","    <tr>\n","      <th>technician</th>\n","      <td>2.863203</td>\n","    </tr>\n","    <tr>\n","      <th>marketing</th>\n","      <td>2.757158</td>\n","    </tr>\n","    <tr>\n","      <th>entertainment</th>\n","      <td>1.908802</td>\n","    </tr>\n","    <tr>\n","      <th>healthcare</th>\n","      <td>1.696713</td>\n","    </tr>\n","    <tr>\n","      <th>retired</th>\n","      <td>1.484624</td>\n","    </tr>\n","    <tr>\n","      <th>lawyer</th>\n","      <td>1.272534</td>\n","    </tr>\n","    <tr>\n","      <th>salesman</th>\n","      <td>1.272534</td>\n","    </tr>\n","    <tr>\n","      <th>none</th>\n","      <td>0.954401</td>\n","    </tr>\n","    <tr>\n","      <th>homemaker</th>\n","      <td>0.742312</td>\n","    </tr>\n","    <tr>\n","      <th>doctor</th>\n","      <td>0.742312</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Reporte el promedio de edad de los estudiantes usando indexeo booleano."],"metadata":{"id":"OqJ3ufrnEouE"}},{"cell_type":"code","source":["promedio=df[df['occupation']=='student']['age'].mean()\n","promedio"],"metadata":{"id":"h9LdQIKZF5Y3","executionInfo":{"status":"ok","timestamp":1732314598215,"user_tz":180,"elapsed":1,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"d84498f3-6f1e-41cf-e987-a9d30d2ee31e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["22.081632653061224"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["Mostrar, con una sola linea y sin importar `matplotlib`, un histograma de las edades de las personas que son administradores."],"metadata":{"id":"ECU9-LayF53z"}},{"cell_type":"code","source":["df[df['occupation']=='administrator']['age'].hist()"],"metadata":{"id":"qOimVpu0F4el","executionInfo":{"status":"ok","timestamp":1732314606267,"user_tz":180,"elapsed":616,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"dff022e5-4552-4164-abe0-ff4933aa5be8","colab":{"base_uri":"https://localhost:8080/","height":447}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Reemplace, sin usar `for`, en la columna `gender` `F` por `female` y `M` por `male`."],"metadata":{"id":"mFzSH9D1QHM4"}},{"cell_type":"code","source":["df['gender'].replace({'F': 'female', 'M': 'male'}, inplace=True)\n","df.head()"],"metadata":{"id":"SZg2_4AJQHhr","executionInfo":{"status":"ok","timestamp":1732314610946,"user_tz":180,"elapsed":315,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"79b574b6-9146-482d-e73e-565174513f53","colab":{"base_uri":"https://localhost:8080/","height":359}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-61825f2ef6ca>:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df['gender'].replace({'F': 'female', 'M': 'male'}, inplace=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["         age  gender  occupation zip_code\n","user_id                                  \n","1         24    male  technician    85711\n","2         53  female       other    94043\n","3         23    male      writer    32067\n","4         24    male  technician    43537\n","5         33  female       other    15213"],"text/html":["\n","  <div id=\"df-a40a4dbc-4d02-4a58-ba36-29bb11984427\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>occupation</th>\n","      <th>zip_code</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>24</td>\n","      <td>male</td>\n","      <td>technician</td>\n","      <td>85711</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>53</td>\n","      <td>female</td>\n","      <td>other</td>\n","      <td>94043</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23</td>\n","      <td>male</td>\n","      <td>writer</td>\n","      <td>32067</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24</td>\n","      <td>male</td>\n","      <td>technician</td>\n","      <td>43537</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","      <td>female</td>\n","      <td>other</td>\n","      <td>15213</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a40a4dbc-4d02-4a58-ba36-29bb11984427')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a40a4dbc-4d02-4a58-ba36-29bb11984427 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a40a4dbc-4d02-4a58-ba36-29bb11984427');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-081656b8-0af8-475d-a883-ea471ab9caa0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-081656b8-0af8-475d-a883-ea471ab9caa0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-081656b8-0af8-475d-a883-ea471ab9caa0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 943,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 272,\n        \"min\": 1,\n        \"max\": 943,\n        \"num_unique_values\": 943,\n        \"samples\": [\n          97,\n          266,\n          811\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 7,\n        \"max\": 73,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          24,\n          57,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"technician\",\n          \"healthcare\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zip_code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 795,\n        \"samples\": [\n          \"90016\",\n          \"15232\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["# Yahoo! Finance"],"metadata":{"id":"x6s9aanXAp4G"}},{"cell_type":"markdown","source":["Vamos a analizar acciones. La siguiente linea accede a Yahoo Finance y devuelve un DataFrame con los valores de la acción cada dia desde el 1980."],"metadata":{"id":"qqBxTaafArYH"}},{"cell_type":"code","source":["import yfinance as yf\n","dataframe = yf.download('AAPL', start=\"1980-01-01\", end=\"2030-01-01\")"],"metadata":{"id":"HWJ0fZbfApy6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732314615232,"user_tz":180,"elapsed":1936,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"fccf6d8f-db78-40c7-9d93-8f9f7fd16d3c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["\r[*********************100%***********************]  1 of 1 completed\n"]}]},{"cell_type":"markdown","source":["¿Cual es el registro mas viejo? Imprimirlo."],"metadata":{"id":"ikpnKqnPApuG"}},{"cell_type":"code","source":["dataframe.head(1)"],"metadata":{"id":"e56tZ607Appx","executionInfo":{"status":"ok","timestamp":1732314619247,"user_tz":180,"elapsed":265,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"d8089faf-b9b6-4ef3-c41e-0b06353edcc5","colab":{"base_uri":"https://localhost:8080/","height":144}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price                     Adj Close     Close      High       Low      Open  \\\n","Ticker                         AAPL      AAPL      AAPL      AAPL      AAPL   \n","Date                                                                          \n","1980-12-12 00:00:00+00:00  0.098834  0.128348  0.128906  0.128348  0.128348   \n","\n","Price                         Volume  \n","Ticker                          AAPL  \n","Date                                  \n","1980-12-12 00:00:00+00:00  469033600  "],"text/html":["\n","  <div id=\"df-c385a7c8-0568-4151-86e7-7d5951792121\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1980-12-12 00:00:00+00:00</th>\n","      <td>0.098834</td>\n","      <td>0.128348</td>\n","      <td>0.128906</td>\n","      <td>0.128348</td>\n","      <td>0.128348</td>\n","      <td>469033600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c385a7c8-0568-4151-86e7-7d5951792121')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c385a7c8-0568-4151-86e7-7d5951792121 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c385a7c8-0568-4151-86e7-7d5951792121');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataframe","summary":"{\n  \"name\": \"dataframe\",\n  \"rows\": 11080,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1980-12-12 00:00:00+00:00\",\n        \"max\": \"2024-11-22 00:00:00+00:00\",\n        \"num_unique_values\": 11080,\n        \"samples\": [\n          \"2004-03-30 00:00:00+00:00\",\n          \"2018-12-13 00:00:00+00:00\",\n          \"2012-05-29 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48.589789735045336,\n        \"min\": 0.037814896553754807,\n        \"max\": 236.22010803222656,\n        \"num_unique_values\": 8069,\n        \"samples\": [\n          0.3430899977684021,\n          0.25231093168258667,\n          0.31444743275642395\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.060595355338194,\n        \"min\": 0.04910700023174286,\n        \"max\": 236.47999572753906,\n        \"num_unique_values\": 6493,\n        \"samples\": [\n          10.398571014404297,\n          3.3814289569854736,\n          1.1633930206298828\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.53393691474481,\n        \"min\": 0.049665000289678574,\n        \"max\": 237.49000549316406,\n        \"num_unique_values\": 6329,\n        \"samples\": [\n          0.316785991191864,\n          149.97000122070312,\n          28.084999084472656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48.535447591663754,\n        \"min\": 0.04910700023174286,\n        \"max\": 234.4499969482422,\n        \"num_unique_values\": 6317,\n        \"samples\": [\n          30.635000228881836,\n          23.524999618530273,\n          0.6160709857940674\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.01744680854951,\n        \"min\": 0.049665000289678574,\n        \"max\": 236.47999572753906,\n        \"num_unique_values\": 6384,\n        \"samples\": [\n          0.44660699367523193,\n          54.10499954223633,\n          141.24000549316406\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 335015062,\n        \"min\": 0,\n        \"max\": 7421640800,\n        \"num_unique_values\": 10516,\n        \"samples\": [\n          1043142800,\n          93251400,\n          96515200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["Cree la columna `Average` tal que\n","\n","$$Average =  \\frac{High-Low}{2}$$\n","\n","y muestre con un histograma dicha columna."],"metadata":{"id":"EHHhUvUtApk0"}},{"cell_type":"code","source":["dataframe['Average']=(dataframe['High']-dataframe['Low'])/2\n","dataframe['Average'].hist()\n"],"metadata":{"id":"-b9g66axApgL","executionInfo":{"status":"ok","timestamp":1732314625857,"user_tz":180,"elapsed":311,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"78bf69e6-c612-451d-a1fe-d787bed488ea","colab":{"base_uri":"https://localhost:8080/","height":447}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Con `matplotlib`, muestre como `Average` fue evolucionando *al final de cada año*."],"metadata":{"id":"yeZWGXexApbb"}},{"cell_type":"code","source":["dataframe.resample('Y').last()['Average'].plot()"],"metadata":{"id":"oeSb_UegApVZ","executionInfo":{"status":"ok","timestamp":1732314631387,"user_tz":180,"elapsed":367,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"75659964-5bde-4224-a0b7-7e34db67acee","colab":{"base_uri":"https://localhost:8080/","height":501}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-19-495213d5cb83>:1: FutureWarning: 'Y' is deprecated and will be removed in a future version, please use 'YE' instead.\n","  dataframe.resample('Y').last()['Average'].plot()\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Date'>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Muestre con un gráfico de barras, como el volumen fue cambiando *año a año*."],"metadata":{"id":"K1UXxoawApPD"}},{"cell_type":"markdown","source":[],"metadata":{"id":"B5cgX6PgK9WS"}},{"cell_type":"code","source":["dataframe.resample('Y').sum()['Volume'].plot(kind='bar')"],"metadata":{"id":"4OyausU5ApGJ","executionInfo":{"status":"ok","timestamp":1732314637914,"user_tz":180,"elapsed":1115,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"91fa8e92-a58a-49f4-8a95-f83e5ffe4dd9","colab":{"base_uri":"https://localhost:8080/","height":700}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-c981a7ede129>:1: FutureWarning: 'Y' is deprecated and will be removed in a future version, please use 'YE' instead.\n","  dataframe.resample('Y').sum()['Volume'].plot(kind='bar')\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Date'>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Cancelaciones y Delays de vuelos del 2015"],"metadata":{"id":"uf4NRwyMCKbg"}},{"cell_type":"markdown","source":["Creese una cuenta en Kaggle e importe los archivos del dataset del siguiente link: https://www.kaggle.com/datasets/usdot/flight-delays. Cree los dataframes `airlines`, `airports`, y `flights` apartir de esos archivos."],"metadata":{"id":"RoYldCmDCKWJ"}},{"cell_type":"code","source":["#Escribir el codigo para responder la pregunta en esta celda\n","import pandas as pd\n","airlines=pd.read_csv('airlines.csv')\n","airports=pd.read_csv('airports.csv')\n","flights=pd.read_csv('flights.csv')\n"],"metadata":{"id":"pRwfZBNKEFwo","executionInfo":{"status":"ok","timestamp":1732314711937,"user_tz":180,"elapsed":611,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["Combine (*join*) las tablas `airlines`, `airports`, y `flights` en una sola tabla."],"metadata":{"id":"PjDZHuvKCKNp"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.merge(flights, airlines, left_on='AIRLINE', right_on='IATA_CODE')\n","\n","df = pd.merge(df, airports, left_on='ORIGIN_AIRPORT', right_on='IATA_CODE', suffixes=('', '_ORIGIN'))\n","\n","df = df.rename(columns={'IATA_CODE': 'IATA_CODE_ORIGIN'})\n","\n","df = pd.merge(df, airports, left_on='DESTINATION_AIRPORT', right_on='IATA_CODE', suffixes=('_ORIGIN', '_DEST'))\n","\n","df.head()\n","\n"],"metadata":{"id":"fSpwaXWzCKJ9","executionInfo":{"status":"ok","timestamp":1729821318312,"user_tz":180,"elapsed":16194,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"d6db0930-6fb9-426c-bd9e-428dbb696be0","colab":{"base_uri":"https://localhost:8080/","height":481}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   YEAR  MONTH  DAY  DAY_OF_WEEK AIRLINE_x  FLIGHT_NUMBER TAIL_NUMBER  \\\n","0  2015      1    1            4        AS             98      N407AS   \n","1  2015      1    1            4        AA           2336      N3KUAA   \n","2  2015      1    1            4        US            840      N171US   \n","3  2015      1    1            4        AA            258      N3HYAA   \n","4  2015      1    1            4        AS            135      N527AS   \n","\n","  ORIGIN_AIRPORT DESTINATION_AIRPORT  SCHEDULED_DEPARTURE  ...  \\\n","0            ANC                 SEA                    5  ...   \n","1            LAX                 PBI                   10  ...   \n","2            SFO                 CLT                   20  ...   \n","3            LAX                 MIA                   20  ...   \n","4            SEA                 ANC                   25  ...   \n","\n","   COUNTRY_ORIGIN  LATITUDE_ORIGIN  LONGITUDE_ORIGIN  IATA_CODE  \\\n","0             USA         61.17432        -149.99619        SEA   \n","1             USA         33.94254        -118.40807        PBI   \n","2             USA         37.61900        -122.37484        CLT   \n","3             USA         33.94254        -118.40807        MIA   \n","4             USA         47.44898        -122.30931        ANC   \n","\n","                                  AIRPORT_DEST        CITY_DEST  STATE_DEST  \\\n","0         Seattle-Tacoma International Airport          Seattle          WA   \n","1             Palm Beach International Airport  West Palm Beach          FL   \n","2      Charlotte Douglas International Airport        Charlotte          NC   \n","3                  Miami International Airport            Miami          FL   \n","4  Ted Stevens Anchorage International Airport        Anchorage          AK   \n","\n","   COUNTRY_DEST  LATITUDE_DEST  LONGITUDE_DEST  \n","0           USA       47.44898      -122.30931  \n","1           USA       26.68316       -80.09559  \n","2           USA       35.21401       -80.94313  \n","3           USA       25.79325       -80.29056  \n","4           USA       61.17432      -149.99619  \n","\n","[5 rows x 47 columns]"],"text/html":["\n","  <div id=\"df-2e0b2122-2d54-4358-bfa0-bd818cc521c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MONTH</th>\n","      <th>DAY</th>\n","      <th>DAY_OF_WEEK</th>\n","      <th>AIRLINE_x</th>\n","      <th>FLIGHT_NUMBER</th>\n","      <th>TAIL_NUMBER</th>\n","      <th>ORIGIN_AIRPORT</th>\n","      <th>DESTINATION_AIRPORT</th>\n","      <th>SCHEDULED_DEPARTURE</th>\n","      <th>...</th>\n","      <th>COUNTRY_ORIGIN</th>\n","      <th>LATITUDE_ORIGIN</th>\n","      <th>LONGITUDE_ORIGIN</th>\n","      <th>IATA_CODE</th>\n","      <th>AIRPORT_DEST</th>\n","      <th>CITY_DEST</th>\n","      <th>STATE_DEST</th>\n","      <th>COUNTRY_DEST</th>\n","      <th>LATITUDE_DEST</th>\n","      <th>LONGITUDE_DEST</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2015</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>AS</td>\n","      <td>98</td>\n","      <td>N407AS</td>\n","      <td>ANC</td>\n","      <td>SEA</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>USA</td>\n","      <td>61.17432</td>\n","      <td>-149.99619</td>\n","      <td>SEA</td>\n","      <td>Seattle-Tacoma International Airport</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>USA</td>\n","      <td>47.44898</td>\n","      <td>-122.30931</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2015</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>AA</td>\n","      <td>2336</td>\n","      <td>N3KUAA</td>\n","      <td>LAX</td>\n","      <td>PBI</td>\n","      <td>10</td>\n","      <td>...</td>\n","      <td>USA</td>\n","      <td>33.94254</td>\n","      <td>-118.40807</td>\n","      <td>PBI</td>\n","      <td>Palm Beach International Airport</td>\n","      <td>West Palm Beach</td>\n","      <td>FL</td>\n","      <td>USA</td>\n","      <td>26.68316</td>\n","      <td>-80.09559</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2015</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>US</td>\n","      <td>840</td>\n","      <td>N171US</td>\n","      <td>SFO</td>\n","      <td>CLT</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>USA</td>\n","      <td>37.61900</td>\n","      <td>-122.37484</td>\n","      <td>CLT</td>\n","      <td>Charlotte Douglas International Airport</td>\n","      <td>Charlotte</td>\n","      <td>NC</td>\n","      <td>USA</td>\n","      <td>35.21401</td>\n","      <td>-80.94313</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2015</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>AA</td>\n","      <td>258</td>\n","      <td>N3HYAA</td>\n","      <td>LAX</td>\n","      <td>MIA</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>USA</td>\n","      <td>33.94254</td>\n","      <td>-118.40807</td>\n","      <td>MIA</td>\n","      <td>Miami International Airport</td>\n","      <td>Miami</td>\n","      <td>FL</td>\n","      <td>USA</td>\n","      <td>25.79325</td>\n","      <td>-80.29056</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2015</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>AS</td>\n","      <td>135</td>\n","      <td>N527AS</td>\n","      <td>SEA</td>\n","      <td>ANC</td>\n","      <td>25</td>\n","      <td>...</td>\n","      <td>USA</td>\n","      <td>47.44898</td>\n","      <td>-122.30931</td>\n","      <td>ANC</td>\n","      <td>Ted Stevens Anchorage International Airport</td>\n","      <td>Anchorage</td>\n","      <td>AK</td>\n","      <td>USA</td>\n","      <td>61.17432</td>\n","      <td>-149.99619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 47 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e0b2122-2d54-4358-bfa0-bd818cc521c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e0b2122-2d54-4358-bfa0-bd818cc521c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e0b2122-2d54-4358-bfa0-bd818cc521c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-462eae44-23bc-4637-8cd8-d35822855347\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-462eae44-23bc-4637-8cd8-d35822855347')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-462eae44-23bc-4637-8cd8-d35822855347 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["¿Cuantos vuelos fueron al aeropuerto JFK?"],"metadata":{"id":"qnx03j1hFm54"}},{"cell_type":"code","source":["\n","JFK= flights[flights['DESTINATION_AIRPORT'] == 'JFK'].shape[0]\n","JFK"],"metadata":{"id":"lmluYuizFnKD","executionInfo":{"status":"ok","timestamp":1729821364889,"user_tz":180,"elapsed":340,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"3d3a3f31-b14d-4e79-e3ed-0c13a553ae86","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["93809"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["¿Cuantos vuelos hizo la aerolinea AA?"],"metadata":{"id":"dhyTy9BhFnXx"}},{"cell_type":"code","source":["\n","AA_flights = flights[flights['AIRLINE'] == 'AA']\n","AA = AA_flights.shape[0]\n","AA\n","\n","\n"],"metadata":{"id":"IupGmRDpFnsu","executionInfo":{"status":"ok","timestamp":1729821420809,"user_tz":180,"elapsed":312,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"0ac3d662-d591-40ca-c1f1-6769b5515178","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["725984"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["¿Que aerolineas (las primeras 5) tuvo la menor cantidad de vuelos con atrasos? Imprimirlas."],"metadata":{"id":"kMP-JH_VEsMb"}},{"cell_type":"code","source":["\n","delayed_flights = flights[flights['ARRIVAL_DELAY'] > 0]\n","\n","\n","delayed_flights_count = delayed_flights['AIRLINE'].value_counts()\n","\n","\n","top_5_least_delayed = delayed_flights_count.nsmallest(5)\n","\n","\n","print(top_5_least_delayed)\n"],"metadata":{"id":"4-h0JTPuEsZk","executionInfo":{"status":"ok","timestamp":1729821706522,"user_tz":180,"elapsed":1190,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"00a5a8d2-3f2f-47a2-a1ae-46f480861500","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AIRLINE\n","VX    24180\n","HA    30179\n","F9    41232\n","NK    56887\n","AS    56953\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":["¿Que aerolineas (las primeras 5) tuvo la mayor cantidad de vuelos con atrasos? Imprimirlas."],"metadata":{"id":"AD51bj4AEs3L"}},{"cell_type":"code","source":["delayed_flights = flights[flights['ARRIVAL_DELAY'] > 0]\n","delayed_flights_count = delayed_flights['AIRLINE'].value_counts()\n","top_5_most_delayed = delayed_flights_count.nlargest(5)\n","\n","print(top_5_most_delayed)\n"],"metadata":{"id":"MiB6jHQ2Erqx","executionInfo":{"status":"ok","timestamp":1729821813541,"user_tz":180,"elapsed":3972,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"331d6268-77ea-4915-db52-44e1b99cdcd3","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AIRLINE\n","WN    470767\n","AA    252191\n","DL    250840\n","OO    222435\n","EV    213217\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":["Haga un resumen de las razones por la cual los vuelos se atrasan."],"metadata":{"id":"DWQedGQvFYGP"}},{"cell_type":"code","source":["delay_reasons_columns = ['AIR_SYSTEM_DELAY', 'SECURITY_DELAY', 'AIRLINE_DELAY', 'LATE_AIRCRAFT_DELAY', 'WEATHER_DELAY']\n","\n","delay_reasons = flights[delay_reasons_columns].sum()\n","\n","print(delay_reasons)\n"],"metadata":{"id":"AtPN0dv5FX3d","executionInfo":{"status":"ok","timestamp":1729821862443,"user_tz":180,"elapsed":654,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"01ad9071-5a90-41e2-aab7-0afbdc596dca","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AIR_SYSTEM_DELAY       14335762.0\n","SECURITY_DELAY            80985.0\n","AIRLINE_DELAY          20172956.0\n","LATE_AIRCRAFT_DELAY    24961931.0\n","WEATHER_DELAY           3100233.0\n","dtype: float64\n"]}]},{"cell_type":"markdown","source":["Compruebe si hay columnas con celdas vacias."],"metadata":{"id":"rMpR4FWdCKF2"}},{"cell_type":"code","source":["missing_data = flights.isnull().sum()\n","\n","columns_with_missing_data = missing_data[missing_data > 0]\n","print(columns_with_missing_data)\n"],"metadata":{"id":"S_SzBL9ZCKCV","executionInfo":{"status":"ok","timestamp":1729822139917,"user_tz":180,"elapsed":2697,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"9d27560f-ba63-407b-f643-cf7553efde6b","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["TAIL_NUMBER              14721\n","DEPARTURE_TIME           86153\n","DEPARTURE_DELAY          86153\n","TAXI_OUT                 89047\n","WHEELS_OFF               89047\n","SCHEDULED_TIME               6\n","ELAPSED_TIME            105071\n","AIR_TIME                105071\n","WHEELS_ON                92513\n","TAXI_IN                  92513\n","ARRIVAL_TIME             92513\n","ARRIVAL_DELAY           105071\n","CANCELLATION_REASON    5729195\n","AIR_SYSTEM_DELAY       4755640\n","SECURITY_DELAY         4755640\n","AIRLINE_DELAY          4755640\n","LATE_AIRCRAFT_DELAY    4755640\n","WEATHER_DELAY          4755640\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["Haga una imputación de datos COMPLETA del dataframe. Pueden escojer cualquier estrategia y no necesariamente todas las columnas deben seguir la misma estrategia."],"metadata":{"id":"1IH7wd3PCJfQ"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.impute import SimpleImputer\n","\n","columnas_numericas = df.select_dtypes(include=['float64', 'int64']).columns\n","columnas_categoricas = df.select_dtypes(include=['object', 'category']).columns\n","\n","\n","imputer_numerico = SimpleImputer(strategy='mean')\n","df[columnas_numericas] = imputer_numerico.fit_transform(df[columnas_numericas])\n","\n","imputer_categorico = SimpleImputer(strategy='most_frequent')\n","df[columnas_categoricas] = imputer_categorico.fit_transform(df[columnas_categoricas])\n","\n","\n","faltantes_despues = df.isnull().sum()\n","print(\"Valores faltantes después de la imputación:\")\n","print(faltantes_despues)\n","\n","\n","print(df.head())\n"],"metadata":{"id":"PHmO-jb8CJaF","executionInfo":{"status":"ok","timestamp":1732315471359,"user_tz":180,"elapsed":357,"user":{"displayName":"B. Guerrero","userId":"00461362201627918704"}},"outputId":"fd449629-df12-410e-b538-ba55ab6c4758","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Valores faltantes después de la imputación:\n","age           0\n","gender        0\n","occupation    0\n","zip_code      0\n","dtype: int64\n","          age  gender  occupation zip_code\n","user_id                                   \n","1        24.0    male  technician    85711\n","2        53.0  female       other    94043\n","3        23.0    male      writer    32067\n","4        24.0    male  technician    43537\n","5        33.0  female       other    15213\n"]}]}]}